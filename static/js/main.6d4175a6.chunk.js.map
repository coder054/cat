{"version":3,"sources":["components/Notfound.js","data/config.js","helpers/index.js","components/ForecastOneCity.js","data/randomCities.js","components/Home.js","components/Header.js","components/Question.js","components/TestTriNho.js","components/TuanAnhLine.js","components/MatchingTest.js","components/PowerPlugDemo.js","App.js","serviceWorker.js","index.js"],"names":["Notfound","react_default","a","createElement","className","Component","config","app_key","root_url_current_weather","root_url_5days_forecast","chart_option","scaleShowGridLines","scaleGridLineColor","scaleGridLineWidth","scaleShowHorizontalLines","scaleShowVerticalLines","bezierCurve","bezierCurveTension","pointDot","pointDotRadius","pointDotStrokeWidth","pointHitDetectionRadius","datasetStroke","datasetStrokeWidth","datasetFill","legendTemplate","offsetGridLines","convertKelvinToCelsius","kelvin","Number","toFixed","remove_character","str","char_pos","substring","length","LineChart","require","Line","ForecastOneCity","state","loaded","dataForecast","day","chartData","labels","datasets","label","fillColor","strokeColor","pointColor","pointStrokeColor","pointHighlightFill","pointHighlightStroke","data","prevProps","prevState","match","params","cityname","this","props","fetchData","setState","today","moment","format","day2","Date","add","day3","day4","day5","console","log","axios","get","concat","forecastData","caculateData","show","cityNotFound","_context","t0","dataList","list","filter","item","dt_txt","includes","tempList","humidityList","i","push","main","temp","humidity","unshift","newState","update","_datasets","Object","defineProperty","$set","_this2","options","width","height","onClick","changeDay","renderContent","randomCities","id","name","country","coord","lon","lat","Home","weatherList","requestList","_randomCities$i","Promise","all","then","values","catch","err","map","city","key","Home_OneRow","OneRow","_ref","_ref$city$data","_ref$city$data$main","pressure","Link","to","Header","handleSubmit","e","preventDefault","_this","history","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onSubmit","value","onChange","target","placeholder","withRouter","Question","lib_default","dots","infinite","speed","slidesToShow","slidesToScroll","Question_Item","Item","observer","_Component2","_getPrototypeOf2","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","mobxstate","answer_a","answer_b","answer_c","answer_d","answer_e","answer_f","dapandung","isUserChooseRight","inherits","createClass","xuly","answer","acf","ta","tb","tc","td","te","tf","question","imga","handleClick","bind","classNames","checked","src","alt","imgb","imgc","imgd","imge","imgf","jsx","global","decorate","observable","counterTime","TestTriNho","_Component","index","counter","resultsOfUser","resultOfUserRaw","isClickXemKetQua","lengthh","currentItem","isHetGio","numberOfQuestionLeft","number","showKetQua","ketquaCuthe","socaudung","result","interval","setInterval","tick","clearInterval","answerName","tName","_this3","active","is-active","Fragment","resultsOfUserRaw","audio","Audio","TuanAnhLine","lineData","resultList","currentIndex","currentQuestionIndex","showAnswer","reset","redrawMode","undefined","numberOfQuestion","from","reDrawLines","b","toConsumableArray","_loop","setTimeout","question_1","image","question_2","question_3","question_4","currentQuestion","checkAnswer","numberOfImageOfCurrentQuestion","questionName","tag","toJS","matchingData","j","react_lineto_default","fromAnchor","toAnchor","borderWidth","borderColor","_currentQuestion$acf","_currentQuestion$acf$","answer_1","answer_2","answer_3","_currentQuestion$acf$2","renderLines","handleLeftImageClick","play","handleRightImageClick","Demo","components_TuanAnhLine","Block","_this$props","top","left","color","style","backgroundColor","onMouseOver","onMouseOut","children","TreeItem","_this5","h","_","A","B","C","D","l","Math","ceil","depth","MatchingTest_Block","random","fill","parent","String","fromCharCode","react_lineto","assign","within","orientation","delay","borderStyle","MatchingTest","PowerPlugDemo","App","HashRouter","components_Header","Switch","Route","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6d4175a6.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\n\r\nclass Notfound extends Component{\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div className=\"Notfound-wrapper\">\r\n\t\t\t\tNotfound!!!\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Notfound","export const config = {\r\n  app_key: \"b32a62a50210dc3a4897ad98c2e9cfaa\",\r\n  root_url_current_weather: \"http://api.openweathermap.org/data/2.5/weather\",\r\n  root_url_5days_forecast: \"http://api.openweathermap.org/data/2.5/forecast\",\r\n  chart_option: {\r\n    ///Boolean - Whether grid lines are shown across the chart\r\n    scaleShowGridLines: true,\r\n\r\n    //String - Colour of the grid lines\r\n    scaleGridLineColor: \"rgba(0,0,0,.05)\",\r\n\r\n    //Number - Width of the grid lines\r\n    scaleGridLineWidth: 1,\r\n\r\n    //Boolean - Whether to show horizontal lines (except X axis)\r\n    scaleShowHorizontalLines: true,\r\n\r\n    //Boolean - Whether to show vertical lines (except Y axis)\r\n    scaleShowVerticalLines: true,\r\n\r\n    //Boolean - Whether the line is curved between points\r\n    bezierCurve: true,\r\n\r\n    //Number - Tension of the bezier curve between points\r\n    bezierCurveTension: 0.4,\r\n\r\n    //Boolean - Whether to show a dot for each point\r\n    pointDot: true,\r\n\r\n    //Number - Radius of each point dot in pixels\r\n    pointDotRadius: 4,\r\n\r\n    //Number - Pixel width of point dot stroke\r\n    pointDotStrokeWidth: 1,\r\n\r\n    //Number - amount extra to add to the radius to cater for hit detection outside the drawn point\r\n    pointHitDetectionRadius: 20,\r\n\r\n    //Boolean - Whether to show a stroke for datasets\r\n    datasetStroke: true,\r\n\r\n    //Number - Pixel width of dataset stroke\r\n    datasetStrokeWidth: 2,\r\n\r\n    //Boolean - Whether to fill the dataset with a colour\r\n    datasetFill: true,\r\n\r\n    //String - A legend template\r\n    legendTemplate:\r\n      '<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].strokeColor%>\"><%if(datasets[i].label){%><%=datasets[i].label%><%}%></span></li><%}%></ul>',\r\n\r\n    //Boolean - Whether to horizontally center the label and point dot inside the grid\r\n    offsetGridLines: false,\r\n  },\r\n}\r\n","export function convertKelvinToCelsius(kelvin) {\r\n\tif (kelvin < 0) {\r\n\t\treturn \"below absolute zero (0 K)\"\r\n\t} else {\r\n\t\treturn toFixed(kelvin - 273.15)\r\n\t}\r\n}\r\nexport function remove_character(str, char_pos) \r\n {\r\n  let part1 = str.substring(0, char_pos);\r\n  let part2 = str.substring(char_pos + 1, str.length);\r\n  return (part1 + part2);\r\n }\r\n\r\n\r\nfunction toFixed(temp) {\r\n\treturn Number(temp.toFixed(0))\r\n}\r\n","import React, { Component } from \"react\"\r\nimport axios from \"axios\"\r\nimport { config } from \"../data/config\"\r\nimport moment from \"moment\"\r\nimport { convertKelvinToCelsius } from \"../helpers\"\r\nimport update from \"immutability-helper\"\r\n\r\nconst LineChart = require(\"react-chartjs\").Line\r\n\r\nclass ForecastOneCity extends Component {\r\n  state = {\r\n    loaded: false,\r\n    dataForecast: {},\r\n    day: \"today\",\r\n    chartData: {\r\n      labels: [\r\n        \"00:00\",\r\n        \"03:00\",\r\n        \"06:00\",\r\n        \"09:00\",\r\n        \"12:00\",\r\n        \"15:00\",\r\n        \"18:00\",\r\n        \"21:00\",\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"Temperature\",\r\n          fillColor: \"rgba(220,220,220,0.2)\",\r\n          strokeColor: \"rgba(220,220,220,1)\",\r\n          pointColor: \"rgba(220,220,220,1)\",\r\n          pointStrokeColor: \"#fff\",\r\n          pointHighlightFill: \"#fff\",\r\n          pointHighlightStroke: \"rgba(220,220,220,1)\",\r\n          data: [1, 1, 1, 1, 1, 1, 1, 1],\r\n        },\r\n        {\r\n          label: \"Humidity\",\r\n          fillColor: \"rgba(151,187,205,0.2)\",\r\n          strokeColor: \"rgba(151,187,205,1)\",\r\n          pointColor: \"rgba(151,187,205,1)\",\r\n          pointStrokeColor: \"#fff\",\r\n          pointHighlightFill: \"#fff\",\r\n          pointHighlightStroke: \"rgba(151,187,205,1)\",\r\n          data: [1, 1, 1, 1, 1, 1, 1, 1],\r\n        },\r\n      ],\r\n    },\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // only update chart if the cityname has changed\r\n    if (prevProps.match.params.cityname !== this.props.match.params.cityname) {\r\n      this.fetchData()\r\n    }\r\n  }\r\n\r\n  async fetchData() {\r\n    this.setState({ loaded: false })\r\n    let today = moment().format(\"YYYY-MM-DD\")\r\n    let day2 = moment(new Date())\r\n      .add(1, \"days\")\r\n      .format(\"YYYY-MM-DD\")\r\n    let day3 = moment(new Date())\r\n      .add(2, \"days\")\r\n      .format(\"YYYY-MM-DD\")\r\n    let day4 = moment(new Date())\r\n      .add(3, \"days\")\r\n      .format(\"YYYY-MM-DD\")\r\n    let day5 = moment(new Date())\r\n      .add(4, \"days\")\r\n      .format(\"YYYY-MM-DD\")\r\n\r\n    this.setState({ today, day2, day3, day4, day5 })\r\n\r\n    let cityname = this.props.match.params.cityname\r\n    console.log(\"fetch data for\" + cityname)\r\n\r\n    try {\r\n      let forecastData = await axios.get(\r\n        `${config.root_url_5days_forecast}?appid=${\r\n          config.app_key\r\n        }&q=${cityname}`\r\n      )\r\n      this.setState({ dataForecast: forecastData })\r\n      this.caculateData()\r\n      this.setState({ show: true })\r\n      this.setState({ loaded: true })\r\n      this.setState({ cityNotFound: false })\r\n    } catch (err) {\r\n      console.log(err)\r\n      this.setState({ cityNotFound: true, loaded: true })\r\n    }\r\n    console.log(this.state)\r\n  }\r\n\r\n  async componentDidMount() {\r\n    console.log(\"cwm\")\r\n    this.fetchData()\r\n  }\r\n\r\n  async caculateData() {\r\n    let day = this.state[this.state.day]\r\n\r\n    let dataList = this.state.dataForecast.data.list.filter(item => {\r\n      return item.dt_txt.includes(day)\r\n    })\r\n\r\n    let tempList = []\r\n    let humidityList = []\r\n\r\n    for (let i = 0; i < dataList.length; i++) {\r\n      tempList.push(convertKelvinToCelsius(dataList[i].main.temp))\r\n      humidityList.push(dataList[i].main.humidity)\r\n    }\r\n\r\n    if (this.state.day == \"today\") {\r\n      for (let i = 0; i < 8 - dataList.length; i++) {\r\n        tempList.unshift(null)\r\n        humidityList.unshift(null)\r\n      }\r\n    }\r\n\r\n    let newState = update(this.state, {\r\n      chartData: {\r\n        datasets: {\r\n          [0]: { data: { $set: tempList } },\r\n          [1]: { data: { $set: humidityList } },\r\n        },\r\n      },\r\n    })\r\n\r\n    this.setState(newState)\r\n  }\r\n\r\n  async changeDay(day) {\r\n    await this.setState({ day })\r\n    this.caculateData()\r\n  }\r\n\r\n  renderContent() {\r\n    if (!this.state.loaded) {\r\n      return <div>Fetching data...</div>\r\n    } else {\r\n      if (this.state.cityNotFound) {\r\n        return <div>City not found</div>\r\n      } else {\r\n        return (\r\n          <div>\r\n            <p className=\"title\">\r\n              Weather Forecast for{\" \"}\r\n              <span className=\"cityname\">\r\n                {this.props.match.params.cityname}\r\n              </span>{\" \"}\r\n              in 5 days\r\n            </p>\r\n            {this.state.show ? (\r\n              <LineChart\r\n                data={this.state.chartData}\r\n                options={config.chart_option}\r\n                width=\"900\"\r\n                height=\"450\"\r\n              />\r\n            ) : (\r\n              <div> Loading... </div>\r\n            )}\r\n\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  this.changeDay(\"today\")\r\n                }}\r\n                className=\"btn btn-info mr-2\"\r\n              >\r\n                {\" \"}\r\n                {this.state.today}{\" \"}\r\n              </button>\r\n              <button\r\n                onClick={() => {\r\n                  this.changeDay(\"day2\")\r\n                }}\r\n                className=\"btn btn-info mr-2\"\r\n              >\r\n                {\" \"}\r\n                {this.state.day2}{\" \"}\r\n              </button>\r\n              <button\r\n                onClick={() => {\r\n                  this.changeDay(\"day3\")\r\n                }}\r\n                className=\"btn btn-info mr-2\"\r\n              >\r\n                {\" \"}\r\n                {this.state.day3}{\" \"}\r\n              </button>\r\n              <button\r\n                onClick={() => {\r\n                  this.changeDay(\"day4\")\r\n                }}\r\n                className=\"btn btn-info mr-2\"\r\n              >\r\n                {\" \"}\r\n                {this.state.day4}{\" \"}\r\n              </button>\r\n              <button\r\n                onClick={() => {\r\n                  this.changeDay(\"day5\")\r\n                }}\r\n                className=\"btn btn-info mr-2\"\r\n              >\r\n                {\" \"}\r\n                {this.state.day5}{\" \"}\r\n              </button>\r\n            </div>\r\n\r\n            <div>\r\n              {\" \"}\r\n              Day: {this.state[this.state.day]} - ({this.state.day}){\" \"}\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"ForecastOneCity-wrapper\">{this.renderContent()}</div>\r\n  }\r\n}\r\n\r\nexport default ForecastOneCity\r\n","// import cityList from \"./city.list.json\"\r\n\r\n// function randomCitiesGetter(cityList) {\r\n//  let randomCities = []\r\n//  for (let i = 0; i < 10; i++) {\r\n//    let randomIndex = Math.floor(Math.random() * cityList.length)\r\n//    let item = cityList.splice(randomIndex, 1)\r\n//    randomCities.push(item[0])\r\n//  }\r\n\r\n//  return randomCities\r\n// }\r\n// const randomCities = randomCitiesGetter(cityList)\r\n\r\nconst randomCities = [\r\n  {\r\n    id: 5809844,\r\n    name: \"Seattle\",\r\n    country: \"US\",\r\n    coord: {\r\n      lon: -122.332069,\r\n      lat: 47.606209,\r\n    },\r\n  },\r\n\r\n  {\r\n    id: 2968815,\r\n    name: \"Paris\",\r\n    country: \"FR\",\r\n    coord: {\r\n      lon: 2.3486,\r\n      lat: 48.853401,\r\n    },\r\n  },\r\n\r\n  {\r\n    id: 1581130,\r\n    name: \"Ha Noi\",\r\n    country: \"VN\",\r\n    coord: {\r\n      lon: 105.841171,\r\n      lat: 21.0245,\r\n    },\r\n  },\r\n\r\n  {\r\n    id: 1583477,\r\n    name: \"Dien Bien Phu\",\r\n    country: \"VN\",\r\n    coord: {\r\n      lon: 103.01667,\r\n      lat: 21.383329,\r\n    },\r\n  },\r\n\r\n  {\r\n    id: 4887398,\r\n    name: \"Chicago\",\r\n    country: \"US\",\r\n    coord: {\r\n      lon: -87.650047,\r\n      lat: 41.850029,\r\n    },\r\n  },\r\n\r\n  {\r\n    id: 1153671,\r\n    name: \"Chiang Mai\",\r\n    country: \"TH\",\r\n    coord: {\r\n      lon: 98.98468,\r\n      lat: 18.79038,\r\n    },\r\n  },\r\n\r\n  {\r\n    id: 1580240,\r\n    name: \"Hue\",\r\n    country: \"VN\",\r\n    coord: {\r\n      lon: 107.599998,\r\n      lat: 16.466669,\r\n    },\r\n  },\r\n\r\n  {\r\n    id: 1850147,\r\n    name: \"Tokyo\",\r\n    country: \"JP\",\r\n    coord: {\r\n      lon: 139.691711,\r\n      lat: 35.689499,\r\n    },\r\n  },\r\n\r\n  {\r\n    id: 1880252,\r\n    name: \"Singapore\",\r\n    country: \"SG\",\r\n    coord: {\r\n      lon: 103.850067,\r\n      lat: 1.28967,\r\n    },\r\n  },\r\n\r\n  {\r\n    id: 4391354,\r\n    name: \"Houston\",\r\n    country: \"US\",\r\n    coord: {\r\n      lon: -91.955994,\r\n      lat: 37.32616,\r\n    },\r\n  },\r\n]\r\n\r\nexport default randomCities\r\n","import React, { Component } from \"react\"\r\nimport axios from \"axios\"\r\nimport randomCities from \"../data/randomCities\"\r\nimport { config } from \"../data/config\"\r\nimport { convertKelvinToCelsius } from \"../helpers\"\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    weatherList: [],\r\n  }\r\n  componentWillMount() {\r\n    let requestList = []\r\n    for (let i = 0; i < randomCities.length; i++) {\r\n      let { name, country } = randomCities[i]\r\n      requestList.push(\r\n        axios.get(\r\n          `${config.root_url_current_weather}?appid=${\r\n            config.app_key\r\n          }&q=${name},${country}`\r\n        )\r\n      )\r\n    }\r\n\r\n    Promise.all(requestList)\r\n      .then(values => {\r\n        \r\n        this.setState({ weatherList: values })\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <table className=\"table table-dark\">\r\n          <thead>\r\n            <tr>\r\n              <th>City</th>\r\n              <th>Temperature (C)</th>\r\n              <th>Pressure (hPa)</th>\r\n              <th>Humidity (%)</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.weatherList.length && this.state.weatherList\r\n              ? this.state.weatherList.map((city, key) => (\r\n                  <OneRow city={city} key={key}></OneRow>\r\n                ))\r\n              : null\r\n            }\r\n            <tr>\r\n              <td></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home\r\n\r\nconst OneRow = ({city: { data: {name, main: {humidity, temp, pressure} } }  }) => (\r\n\r\n  <tr>\r\n    <td> <Link to={`/forecast/${name}`} > {name} </Link> </td>\r\n    <td> { convertKelvinToCelsius(temp) } </td>\r\n    <td> {pressure} </td>\r\n    <td> {humidity} </td>\r\n  </tr>\r\n)","import React, { Component } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { withRouter } from \"react-router-dom\"\r\nclass Header extends Component {\r\n  state = {\r\n    cityname: \"\",\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault()\r\n    this.props.history.push(`/forecast/${this.state.cityname}`)\r\n  }\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light mb-5\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          {\" \"}\r\n          Weather{\" \"}\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"mr-auto\" />\r\n          <form\r\n            onSubmit={this.handleSubmit}\r\n            className=\"form-inline my-2 my-lg-0\"\r\n          >\r\n            <input\r\n              value={this.state.cityname}\r\n              onChange={e => this.setState({ cityname: e.target.value })}\r\n              className=\"form-control mr-sm-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search city\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button\r\n              className=\"btn btn-outline-success my-2 my-sm-0\"\r\n              type=\"submit\"\r\n            >\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Header)\r\n","import React, {Component} from 'react'\r\nimport Slider from \"react-slick\";\r\nimport data from './../data/questions.json'\r\nimport classNames from 'classnames'\r\nimport { decorate, observable } from \"mobx\"\r\nimport { observer } from \"mobx-react\"\r\n\r\n\r\n\r\n class Question extends Component{\r\n\r\n  render() {\r\n    var settings = {\r\n      dots: true,\r\n      infinite: true,\r\n      speed: 500,\r\n      slidesToShow: 1,\r\n      slidesToScroll: 1\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n      <Slider {...settings}>\r\n        \r\n        {data.length && data\r\n          ? data.map((item) => (\r\n              <Item key={item.id} item={item} />\r\n            ))\r\n          : null\r\n        }\r\n        \r\n \r\n\r\n\r\n      </Slider>\r\n    );\r\n  }\r\n}\r\n\r\nconst Item = observer(\r\n    \r\n  class Item extends Component{ \r\n  \r\n     mobxstate = {  \r\n      answer_a: false,  \r\n      answer_b: false,  \r\n      answer_c: false,  \r\n      answer_d: false,  \r\n      answer_e: false,  \r\n      answer_f: false,  \r\n      dapandung: null,  \r\n      isUserChooseRight: false, \r\n\r\n  \r\n    } \r\n  \r\n  \r\n    componentDidMount(){  \r\n      this.xuly()\r\n      \r\n    } \r\n  \r\n\r\n    xuly(){ \r\n  \r\n      const {answer} = this.props.item.acf  \r\n  \r\n      if(answer.answer_a.ta.length === 1){ \r\n        this.mobxstate.dapandung = 'answer_a';  \r\n        return  \r\n      } \r\n  \r\n      if(answer.answer_b.tb.length === 1){ \r\n        this.mobxstate.dapandung = 'answer_b' \r\n        return  \r\n      } \r\n  \r\n                    if( answer.answer_c.tc.length === 1){  \r\n        this.mobxstate.dapandung = 'answer_c' \r\n        return  \r\n      } \r\n  \r\n          if( answer.answer_d.td.length === 1){  \r\n        this.mobxstate.dapandung = 'answer_d' \r\n        return  \r\n      } \r\n  \r\n          if( answer.answer_e.te.length === 1){  \r\n        this.mobxstate.dapandung = 'answer_e' \r\n        return  \r\n      } \r\n  \r\n          if(answer.answer_f.tf.length === 1){ \r\n        this.mobxstate.dapandung = 'answer_f' \r\n        return  \r\n      } \r\n  \r\n  \r\n    } \r\n  \r\n  \r\n    handleClick (answer){ \r\n      this.mobxstate.answer_a = false;  \r\n      this.mobxstate.answer_b = false;  \r\n      this.mobxstate.answer_c = false;  \r\n      this.mobxstate.answer_d = false;  \r\n      this.mobxstate.answer_e = false;  \r\n      this.mobxstate.answer_f = false;  \r\n  \r\n      this.mobxstate[answer]= true  \r\n  \r\n  \r\n      if(this.mobxstate[this.mobxstate.dapandung] === true){  \r\n        this.mobxstate.isUserChooseRight = true \r\n      }else{  \r\n        this.mobxstate.isUserChooseRight = false  \r\n      } \r\n    } \r\n  \r\n    checkIfChooseRight(){ \r\n  \r\n    } \r\n  \r\n  \r\n    render(){ \r\n  \r\n      const {item} = this.props   \r\n      const answer = item.acf.answer  \r\n      const {answer_a, answer_b, answer_c, answer_d, answer_e, answer_f} = answer \r\n  \r\n  \r\n  \r\n      return (  \r\n          <div className=\"one-question\">  \r\n              <p> question: {item.acf.question} </p>  \r\n              <p> Hay chon mot dap an </p>  \r\n              <div className=\"answer-list\"> \r\n                <li>  \r\n                  A: {answer_a.imga} <img onClick={this.handleClick.bind(this, 'answer_a')} className={classNames({'checked': this.mobxstate.answer_a})} src=\"http://lorempixel.com/100/100/\" alt=\"\"/>  \r\n                </li> \r\n                <li>  \r\n                  B: {answer_b.imgb} <img  onClick={this.handleClick.bind(this, 'answer_b')}  className={classNames({'checked': this.mobxstate.answer_b})}  src=\"http://lorempixel.com/100/100/\" alt=\"\"/> \r\n                </li> \r\n                <li>  \r\n                  C: {answer_c.imgc} <img  onClick={this.handleClick.bind(this, 'answer_c')}  className={classNames({'checked': this.mobxstate.answer_c})}  src=\"http://lorempixel.com/100/100/\" alt=\"\"/> \r\n                </li> \r\n                <li>  \r\n                  D: {answer_d.imgd} <img  onClick={this.handleClick.bind(this, 'answer_d')}  className={classNames({'checked': this.mobxstate.answer_d})}  src=\"http://lorempixel.com/100/100/\" alt=\"\"/> \r\n                </li> \r\n  {!!answer_e.imge && ( \r\n                    <li>    \r\n                    E: {answer_e.imge}   <img  onClick={this.handleClick.bind(this, 'answer_e')}  className={classNames({'checked': this.mobxstate.answer_e})}  src=\"http://lorempixel.com/100/100/\" alt=\"\"/> \r\n                  </li>   \r\n                    \r\n  )}  \r\n  {!!answer_f.imgf && ( \r\n                    <li>    \r\n                    F: {answer_f.imgf}   <img  onClick={this.handleClick.bind(this, 'answer_f')}   className={classNames({'checked': this.mobxstate.answer_f})}  src=\"http://lorempixel.com/100/100/\" alt=\"\"/>  \r\n                  </li>   \r\n                    \r\n  )}  \r\n                \r\n              </div>  \r\n              <p> dap an dung: {this.mobxstate.dapandung} </p>  \r\n          \r\n              <p> Nguoi dung chon dung hay sai? { \r\n                this.mobxstate.isUserChooseRight ?  \r\n                ( \"Dung\" ): \r\n                ( \"Sai\" ) \r\n              } </p>  \r\n  \r\n  \r\n  \r\n  \r\n              <style jsx global> {`   \r\n                .one-question{  \r\n                  border: 1px solid #ddd; \r\n                } \r\n                .answer-list img{ \r\n    margin: 10px auto;  \r\n  } \r\n  .answer-list img.checked{ \r\n    border: 3px solid green;  \r\n  } \r\n              `}  \r\n              </style>  \r\n          </div>  \r\n      ) \r\n    } \r\n  } \r\n  \r\n)\r\n\r\n\r\ndecorate(Item, {\r\n    mobxstate: observable,\r\n})\r\n\r\n\r\n\r\nexport default Question\r\n","import React, {Component} from 'react'\r\nimport data from './../data/questions.json'\r\nimport { decorate, observable, flow, computed, action } from \"mobx\"\r\nimport { observer } from \"mobx-react\"\r\nimport FontAwesome from \"react-fontawesome\"\r\nimport classNames from 'classnames'\r\nimport axios from 'axios'\r\nvar counterTime = 5\r\n\r\nconst TestTriNho = observer(\r\n\tclass TestTriNho extends Component{ \r\n\t\tdata = data \r\n\t\tindex = 0\r\n\t\tcounter = counterTime\r\n\t\tresultsOfUser = []\r\n\t\tresultOfUserRaw = []\r\n\t\tisClickXemKetQua = false\r\n\t\tlengthh = () => this.data.length  \r\n\t\tcurrentItem = () => this.data[this.index]\r\n\t\tisHetGio = () => this.counter <= 0\r\n\t\tnumberOfQuestionLeft = () => {\r\n\t\t\tlet number = 0\r\n\t\t\tfor(let i = 0; i < this.resultsOfUser.length; i++){\r\n\t\t\t\tif(this.resultsOfUser[i] === null){\r\n\t\t\t\t\tnumber ++\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn number\r\n\t\t}\r\n\r\n\t\tshowKetQua = () => {\r\n\t\t\treturn this.numberOfQuestionLeft() === 0\r\n\t\t}\r\n\r\n\t\tketquaCuthe = ()=> {\r\n\t\t\tlet socaudung = 0\r\n\t\t\tfor(let i = 0; i < this.resultsOfUser.length; i++){\r\n\t\t\t\tif(this.resultsOfUser[i]){\r\n\t\t\t\t\tsocaudung ++\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn `Bạn đã trả lời đúng ${socaudung} trên tổng số ${this.data.length} câu!`\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tcomponentDidMount(){ \r\n\t\t\t// for(let i = 0; i < this.data.length; i++){\r\n\t\t\t//  this.resultsOfUser.push(null)\r\n\t\t\t//  this.resultOfUserRaw.push(null)\r\n\t\t\t// }\r\n\t\t\t// this.interval = setInterval(() => this.tick(), 1000);\r\n\r\n\t\t\taxios.get('http://khoi.catopiana.com/wp-json/acf/v3/mem')\r\n\t\t\t.then(result => {\r\n\t\t\t\tthis.data = result.data\r\n\t\t\t\tfor(let i = 0; i < this.data.length; i++){\r\n\t\t\t\t\tthis.resultsOfUser.push(null)\r\n\t\t\t\t\tthis.resultOfUserRaw.push(null)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tthis.interval = setInterval(() => this.tick(), 1000);\r\n\t\t} \r\n\r\n\t\tcomponentWillUnmount() {\r\n\t\t\tclearInterval(this.interval);\r\n\t\t}\r\n\t\ttick() {\r\n\t\t\tif(this.counter > 0){\r\n\t\t\t\tthis.counter--\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\t\t\t// console.log('prevProps', prevProps)\r\n\t\t\t\t// console.log('prevState', prevState)\r\n\t\t\t\t// console.log('cdu')\r\n\t\t}\r\n\r\n\r\n\t\thandleClick (answer){\r\n\t\t\tif( this.isClickXemKetQua){\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tlet result = false\r\n\t\t\tlet answerName = \"answer_\" + answer\r\n\t\t\tlet tName = \"t\" + answer\r\n\r\n\t\t\tif(typeof this.currentItem().acf.answer[answerName][tName] === \"string\"){\r\n\r\n\t\t\t} else{\r\n\t\t\t\tresult = true\r\n\t\t\t}\r\n\t\t\tthis.resultsOfUser[this.index] = result\r\n\t\t\tthis.resultOfUserRaw[this.index] = answer\r\n\t\t\tconsole.log('result', result)\r\n\t\t}                                         \r\n\r\n\t\trender(){ \r\n\t\t\tconst sample = {\r\n\t\t\t\t\t\"id\": 122,\r\n\t\t\t\t\t\"acf\": {\r\n\t\t\t\t\t\t\"question\": \"https://i.imgur.com/XvqZcZI.png\",\r\n\t\t\t\t\t\t\"answer\": {\r\n\t\t\t\t\t\t\t\"answer_a\": {\r\n\t\t\t\t\t\t\t\t\"imga\": \"https://i.imgur.com/9Vry7rd.png\",\r\n\t\t\t\t\t\t\t\t\"ta\": [\"t\"]\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\"answer_b\": {\r\n\t\t\t\t\t\t\t\t\"imgb\": \"https://i.imgur.com/onQyxFy.png\",\r\n\t\t\t\t\t\t\t\t\"tb\": \"\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\tconst question = this.currentItem().acf\r\n\t\t\treturn (  \r\n\t\t\t\t<div className=\"TestTriNho-wrapper\">  \r\n\r\n\t\t\t\t\t<p> index: {this.index} </p>\r\n\t\t\t\t\t{!!this.showKetQua() && (\r\n\t\t\t\t\t\t<div className=\"show-kg-button-wr\"> \r\n\t\t\t\t\t\t\t<button onClick={e=> {\r\n\t\t\t\t\t\t\t\tthis.isClickXemKetQua = true\r\n\t\t\t\t\t\t\t\tthis.counter = 0\r\n\t\t\t\t\t\t\t\tthis.index = 0\r\n\t\t\t\t\t\t\t}} className=\"xemkq\"> Xem Ket qua </button> \r\n\t\t\t\t\t\t</div>  \r\n\t\t\t\t\t\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{!this.isHetGio() && (\r\n\t\t\t\t\t\t\t<div className=\"noidungcauhoi-wr\">  \r\n\t\t\t\t\t\t\t\t<p> Hay ghi nho hinh sau day de tra loi: </p> \r\n\t\t\t\t\t\t\t\t<p> <button className=\"time-left\"> {this.counter} </button> </p>  \r\n\t\t\t\t\t\t\t\t<img src={question.question} alt=\"\"/> \r\n\t\t\t\t\t\t\t</div>  \r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{!!this.isHetGio() && (\r\n\t\t\t\t\t\t\t<div className=\"noidung-dapan-wr\">  \r\n\t\t\t\t\t\t\t\t{!!this.isClickXemKetQua && (\r\n\t\t\t\t\t\t\t\t\t<div className=\"showimage\">\r\n\t\t\t\t\t\t\t\t\t\t<p> Show Original Image </p>  \r\n\t\t\t\t\t\t\t\t\t\t<img className=\"question-image-in-show-result\" src={question.question} alt=\"\"/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{!!question.answer.answer_a.imga && ( \r\n\t\t\t\t\t\t\t\t\t\t<img className={classNames({'active': this.resultOfUserRaw[this.index] === \"a\"})} onClick={e=> { this.handleClick(\"a\")}}   src={question.answer.answer_a.imga} alt=\"\"/>   \r\n\t\t\t\t\t\t\t\t)}  \r\n\t\r\n\t\t\t\t\t\t\t\t{!!question.answer.answer_b.imgb && ( \r\n\t\t\t\t\t\t\t\t\t\t<img className={classNames({'active': this.resultOfUserRaw[this.index] === \"b\"})}  onClick={e=> { this.handleClick(\"b\")}}  src={question.answer.answer_b.imgb} alt=\"\"/>   \r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t)}  \r\n\t\r\n\t\t\t\t\t\t\t\t{!!question.answer.answer_c.imgc && ( \r\n\t\t\t\t\t\t\t\t\t\t<img className={classNames({'active': this.resultOfUserRaw[this.index] === \"c\"})}  onClick={e=> { this.handleClick(\"c\")}}  src={question.answer.answer_c.imgc} alt=\"\"/>   \r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t)}  \r\n\t\r\n\t\t\t\t\t\t\t\t{!!question.answer.answer_d.imgd && ( \r\n\t\t\t\t\t\t\t\t\t\t<img  className={classNames({'active': this.resultOfUserRaw[this.index] === \"d\"})}  onClick={e=> { this.handleClick(\"d\")}}  src={question.answer.answer_d.imgd} alt=\"\"/>    \r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t)}  \r\n\t\r\n\t\t\t\t\t\t\t\t{!!question.answer.answer_e.imge && ( \r\n\t\t\t\t\t\t\t\t\t\t<img  className={classNames({'active': this.resultOfUserRaw[this.index] === \"e\"})}  onClick={e=> { this.handleClick(\"e\")}}  src={question.answer.answer_e.imge} alt=\"\"/>    \r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t)}  \r\n\t\r\n\t\t\t\t\t\t\t\t{!!question.answer.answer_f.imgf && ( \r\n\t\t\t\t\t\t\t\t\t\t<img className={classNames({'active': this.resultOfUserRaw[this.index] === \"f\"})}   onClick={e=> { this.handleClick(\"f\")}}  src={question.answer.answer_f.imgf} alt=\"\"/>    \r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t)}  \r\n\t\t\t\t\t\t\t</div>  \r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t<div className=\"dot-wr\">\r\n\t\t\t\t\t\t{this.data.length && this.data\r\n\t\t\t\t\t\t\t? this.data.map((item, i) => (\r\n\t\t\t\t\t\t\t\t\t<span key={item.id} className={classNames('dot-navigation', {'is-active': this.index === i})} onClick={e => {\r\n\t\t\t\t\t\t\t\t\t\tthis.index = i\r\n\t\t\t\t\t\t\t\t\t\tif(this.isClickXemKetQua){\r\n\r\n\t\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\t\tthis.counter = counterTime\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t}}> </span>\r\n\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{!this.isClickXemKetQua && (\r\n\t\t\t\t\t\t<div> <p> Bạn còn {this.numberOfQuestionLeft()} câu hỏi chưa trả lời! </p> </div> \r\n\t\t\t\t\t\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t{!!this.isClickXemKetQua && (\r\n\t\t\t\t\t\t<div> <p> {this.ketquaCuthe()} </p> </div>  \r\n\t\t\t\t\t\r\n\t\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.resultsOfUser[this.index] === null ? \r\n\t\t\t\t\t\t( null ):\r\n\t\t\t\t\t\t( \r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t{!!this.isClickXemKetQua && (\r\n\t\t\t\t\t\t\t\t\t<div> \r\n\t\t\t\t\t\t\t\t\t\t{ \r\n\t\t\t\t\t\t\t\t\t\t\tthis.resultsOfUser[this.index] ?  \r\n\t\t\t\t\t\t\t\t\t\t\t( <div className=\"text-success\"> <i className=\"fa fa-check\"></i> Đúng </div> ): \r\n\t\t\t\t\t\t\t\t\t\t\t( <div className=\"text-danger\"> <i className=\"fa fa-times\"></i> Sai </div> )  \r\n\t\t\t\t\t\t\t\t\t\t}   \r\n\t\t\t\t\t\t\t\t\t</div>    \r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t)}        \r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\t<style jsx global> {`  \r\nspan.dot-navigation{\r\n\twidth: 20px;\r\n\theight: 20px;\r\n\tborder: 1px solid #ddd;\r\n\tdisplay: inline-block;\r\n\tborder-radius: 50%;\r\n\tmargin-right: 15px;\r\n\tcursor: pointer;\r\n\tbackground-color: white;\r\n}\r\n\r\n.is-active{\r\n\tbackground-color: green!important;\r\n}\r\n.noidungcauhoi-wr, .noidung-dapan-wr{\r\n\tborder: 1px solid #ddd;\r\n\tpadding: 15px;\r\n\twidth: 100%;\r\n\tmin-height: 400px;\r\n\tmargin-bottom: 30px;\r\n}\r\n\r\nbutton.time-left{\r\n\tborder-radius: 50%;\r\n\tborder: 5px solid green;\r\n\twidth: 100px;\r\n\theight: 100px;\r\n\tcolor: green;\r\n\tfont-weight: bold;\r\n\tfont-size: 30px;\r\n}\r\n\r\nbutton.time-left{\r\n\tposition: absolute;\r\n\ttop: 10px;\r\n\tright: 10px;\r\n\tz-index: 10;\r\n}\r\n\r\n.TestTriNho-wrapper{\r\n\tposition: relative;\r\n}\r\n\r\n.noidung-dapan-wr img{\r\n\tmargin: auto 20px;\r\n\tdisplay: inline-block!important;\r\n\tborder: 1px solid #efefef;\r\n\tborder-radius: 4px;\r\n\tcursor: pointer;\r\n}\r\n\r\n.noidung-dapan-wr img.active{\r\n\tborder: 3px solid green;\r\n}\r\n.xemkq{\r\n\tposition: absolute;\r\n\tbottom: 10px;\r\n\tright: 0;\r\n\twidth: 150px;\r\n\theight: 40px;\r\n\tborder: 2px solid green;\r\n\tborder-radius: 5px;\r\n\tcursor: pointer;\r\n\ttransition: all 0.2s ease;\r\n\tfont-size: 16px;\r\n\tcolor: green;\r\n\tfont-weight: bold;\r\n\ttext-transform: uppercase;\r\n}\r\n\r\n.xemkq:hover{\r\n\tbackground: green;\r\n\tcolor: white;\r\n}\r\n\r\n\t\t\t\t\t`}\r\n\t\t\t\t\t</style>\r\n\t\t\t\t</div>  \r\n\t\t\t) \r\n\t\t} \r\n\t} \r\n)\r\n\r\n\r\ndecorate(TestTriNho, {\r\n\tdata: observable,\r\n\tindex: observable,\r\n\tcounter: observable,\r\n\tresultsOfUser: observable,\r\n\tresultsOfUserRaw: observable,\r\n\tshowKetQua: observable,\r\n\tisClickXemKetQua: observable\r\n})\r\n\r\nexport default TestTriNho\r\n","import React, {Component} from 'react'\r\nimport LineTo from 'react-lineto'\r\nimport { decorate, observable, flow, computed, action, toJS } from \"mobx\"\r\nimport { observer, inject } from \"mobx-react\"\r\nimport axios from \"axios\"\r\nimport classNames from 'classnames'\r\nimport matchingData from './../data/matching.json'\r\nimport {remove_character} from \"./../helpers/index.js\"\r\nvar audioUrl = \"https://www.zapsplat.com/wp-content/uploads/2015/sound-effects-18146/zapsplat_multimedia_click_003_19369.mp3?_=1\"\r\nvar audio  = new Audio(audioUrl)\r\n\r\n\r\n\r\nconst TuanAnhLine = observer(\r\n\tclass TuanAnhLine extends Component{  \r\n\t\tdata = []\r\n\t\tlineData = []\r\n\t\tresultList= [] // [true, false, null] cau dau tien dung, cau thu hai sai, cau thu ba chua tra loi\r\n\t\tcurrentIndex = 1\r\n\t\tcurrentQuestionIndex = 0\r\n\t\tshowAnswer = false\r\n\t\tisClickXemKetQua = false\r\n\t\t\r\n\t\treset= ( redrawMode = false )=>{\r\n\t\t\tlet a = this.lineData[this.currentQuestionIndex]\r\n\t\t\tfor(let i = 0; i < this.numberOfQuestion(this.data[this.currentQuestionIndex]); i++){\r\n\t\t\t  a[i] = {from: null, to: null}\r\n\t\t\t}\r\n\r\n\t\t\tif(!redrawMode){\r\n\t\t\t\tthis.resultList[this.currentQuestionIndex] = null \r\n\t\t\t}else{\r\n\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\treDrawLines = () => {\r\n\t\t\tlet a = this.lineData[this.currentQuestionIndex]\r\n\t\t\tlet b = [...a]\r\n\t\t\tthis.reset(true)\r\n\r\n\t\t\tfor(let i = 0; i < b.length; i++){\r\n\t\t\t  setTimeout(() => {\r\n\t\t\t\t\ta[i] = {from: b[i].from, to: b[i].to}\r\n\t\t\t  },800)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\tshowKetQua = () => {\r\n\t\t\treturn this.numberOfQuestionLeft() === 0\r\n\t\t}\r\n\r\n\t\tketquaCuthe = ()=> {\r\n\t\t\tlet socaudung = 0\r\n\t\t\tfor(let i = 0; i < this.resultList.length; i++){\r\n\t\t\t\tif(this.resultList[i]){\r\n\t\t\t\t\tsocaudung ++\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn `Bạn đã trả lời đúng ${socaudung} trên tổng số ${this.data.length} câu!`\r\n\t\t}\r\n\t\tnumberOfImageOfCurrentQuestion(){\r\n\t\t\tlet number = 0\r\n\t\t\tlet question = this.data[this.currentQuestionIndex].acf.question\r\n\t\t\tif(question.question_1 && question.question_1.image) {\r\n\t\t\t\tnumber++\r\n\t\t\t}\r\n\t\t\tif(question.question_2 && question.question_2.image){\r\n\t\t\t\tnumber++\r\n\t\t\t}\r\n\t\t\tif(question.question_3 && question.question_3.image){\r\n\t\t\t\tnumber++\r\n\t\t\t}\r\n\t\t\tif(question.question_4 && question.question_4.image){\r\n\t\t\t\tnumber++\r\n\t\t\t}\r\n\t\t\treturn number\r\n\t\t}\r\n\r\n\t\tnumberOfQuestion (currentQuestion){\r\n\t\t\tlet number = 0\r\n\t\t\tlet question = currentQuestion.acf.question\r\n\t\t\tif(question.question_1 && question.question_1.image) {\r\n\t\t\t\tnumber++\r\n\t\t\t}\r\n\t\t\tif(question.question_2 && question.question_2.image){\r\n\t\t\t\tnumber++\r\n\t\t\t}\r\n\t\t\tif(question.question_3 && question.question_3.image){\r\n\t\t\t\tnumber++\r\n\t\t\t}\r\n\t\t\tif(question.question_4 && question.question_4.image){\r\n\t\t\t\tnumber++\r\n\t\t\t}\r\n\t\t\treturn number\r\n\t\t}\r\n\r\n\r\n\t\tnumberOfQuestionLeft(){\r\n\t\t\tlet number = 0\r\n\t\t\tfor(let i = 0; i < this.resultList.length; i++){\r\n\t\t\t\tif(this.resultList[i] === null){\r\n\t\t\t\t\tnumber++\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn number\r\n\t\t}\r\n\r\n\t\thandleLeftImageClick(from){\r\n\t\t\t\r\n\t\t\tlet a = this.lineData[this.currentQuestionIndex] \r\n\r\n\t\t\tfor(let i = 0; i < a.length; i++){\r\n\t\t\t  if(a[i].from){\r\n\r\n\t\t\t  }else{\r\n\t\t\t  \ta[i].from = from\r\n\t\t\t  \tbreak\r\n\t\t\t  }\r\n\t\t\t}\t\r\n\r\n\t\t\tthis.checkAnswer()\r\n\r\n\t\t}\r\n\r\n\t\thandleRightImageClick(to){\r\n\t\t\t\r\n\t\t\tlet a = this.lineData[this.currentQuestionIndex] \r\n\r\n\t\t\tfor(let i = 0; i < a.length; i++){\r\n\t\t\t  if(a[i].to){\r\n\r\n\t\t\t  }else{\r\n\t\t\t  \ta[i].to = to\r\n\t\t\t  \tbreak\r\n\t\t\t  }\r\n\t\t\t}\t\r\n\r\n\t\t\tthis.checkAnswer()\r\n\t\t}\r\n\r\n\r\n\r\n\t\tcheckAnswer(){\r\n\t\t\tlet a = this.lineData[this.currentQuestionIndex]\r\n\t\t\t// neu van con anh chua noi het, khong check nua\r\n\t\t\tfor(let i = 0; i < a.length; i++){\r\n\t\t\t  if(a[i].from === null || a[i].to === null) {\r\n\t\t\t  \treturn\r\n\t\t\t  }\r\n\t\t\t}\r\n\t\t\t// nguoi dung noi tat ca cac anh, tiep tuc\r\n\t\t\tlet acf = this.data[this.currentQuestionIndex].acf\r\n\t\t\t\r\n\t\t\tfor(let i = 0; i < this.numberOfImageOfCurrentQuestion(); i++){\r\n\t\t\t\tlet y = i + 1\r\n\t\t\t\t\r\n\t\t\t\tlet questionName = remove_character(a[i].from , 9)\r\n\t\t\t\tlet answerName = remove_character(a[i].to , 7)\r\n\r\n\t\t\t\tif( acf.question[questionName].tag !== acf.answer[answerName].tag ){\r\n\t\t\t\t\tthis.resultList[this.currentQuestionIndex] = false\r\n\t\t\t\t\tconsole.log('this.resultList', toJS(this.resultList) )\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.resultList[this.currentQuestionIndex] = true\r\n\t\t\tconsole.log('this.resultList', toJS(this.resultList) )\r\n\t\t}\r\n\r\n\t\tcomponentDidMount(){\r\n\t\t\tthis.data = matchingData\r\n\t\t\tfor(let i = 0; i < this.data.length; i++){\r\n\t\t\t\t\tthis.lineData.push([])\r\n\t\t\t\t\tthis.resultList.push(null)\r\n\r\n\t\t\t\t\tfor(let j = 0; j < this.numberOfQuestion(this.data[i]); j++){\r\n\t\t\t\t\t  this.lineData[i].push({from: null, to: null})\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconsole.log( toJS(this.lineData) )\r\n\r\n\r\n\t\t\t// NEU DUNG AXIOS THI DUNG DOAN CODE DUOI VA COMMENT DOAN CODE TREN\r\n\t\t\t// axios.get(\"http://khoi.catopiana.com/wp-json/acf/v3/matching?fbclid=IwAR1F4CnA83XLTVrONGyjWHP-gq_v_HS9_wF7FRoHjUmMo0GCd9NvOI9-eww\")\r\n\t\t\t// .then(({data}) => {\r\n\t\t\t//  this.data = data\r\n\t\t\t//  for(let i = 0; i < this.data.length; i++){\r\n\t\t\t//    this.lineData[i] = {from1: null, from2: null, from3: null, to1: null, to2: null, to3: null, currentIndex: 1}\r\n\t\t\t//    this.resultList.push(null)\r\n\r\n\t\t\t//  }\r\n\r\n\t\t\t// })\r\n\t\t\t// .catch(err => console.log('err', err))\r\n\r\n\t\t}\r\n\r\n\t\trenderLines(){\r\n\t\t\t\tlet a = this.lineData[this.currentQuestionIndex]\r\n\t\t\t\treturn a.map((item, index)=> (\r\n\t\t\t\t\t\t<LineTo key={index} \r\n\t\t\t\t\t\t\t\t\tfrom={item.from}\r\n\t\t\t\t\t\t\t\t  to={item.to} \r\n\t\t\t\t\t\t\t\t  fromAnchor=\"middle right\" \r\n\t\t\t\t\t\t\t\t\ttoAnchor=\"middle left\"  \r\n\t\t\t\t\t\t\t\t\tborderWidth={3} \r\n\t\t\t\t\t\t\t\t\tborderColor=\"#006699\" \r\n\t\t\t\t\t\t\t\t  />\r\n\t\t\t\t))\r\n\t\t\t\t\r\n\t\t}\r\n\r\n\t\trender(){\r\n\t\t\tlet a = this.lineData[this.currentQuestionIndex]\r\n\t\t\tif(!this.data || !this.data.length){\r\n\t\t\t\treturn <div> Loading... </div>\r\n\t\t\t}\r\n\t\t\tconst currentQuestion = this.data[this.currentQuestionIndex]\r\n\t\t\tconst { acf: {answer : {answer_1, answer_2, answer_3}, \r\n\t\t\tquestion: {question_1, question_2, question_3} } \r\n\t\t} = currentQuestion\r\n\r\n\r\n\t\t\treturn (  \r\n\t\t\t\t<div className=\"TuanAnhLine-wrapper\"> \r\n\r\n\r\n\t\t\t\t{this.renderLines()}\r\n\r\n\t\t\t\t\t<div className=\"left-right-wr\"> \r\n\t\t\t\t\t{!!this.showKetQua() && (\r\n\t\t\t\t\t\t<div className=\"show-kg-button-wr\"> \r\n\t\t\t\t\t\t\t<button onClick={e=> {\r\n\t\t\t\t\t\t\t\tthis.isClickXemKetQua = true\r\n\t\t\t\t\t\t\t\t// this.currentQuestionIndex = 0\r\n\t\t\t\t\t\t\t\t// this.reDrawLines()\r\n\t\t\t\t\t\t\t}} className=\"xemkq\"> Xem Ket qua </button> \r\n\t\t\t\t\t\t</div>  \r\n\t\t\t\t\t\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// !this.isClickXemKetQua\r\n\t\t\t\t\t\ttrue\r\n\r\n\t\t\t\t\t\t && (\r\n\t\t\t\t\t\t<p>  Bạn còn: {this.numberOfQuestionLeft()} câu hỏi chưa trả lời! </p>  \r\n\t\t\t\t\t\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t\t{!this.isClickXemKetQua && (\r\n\t\t\t\t\t\t\t<div> <button onClick={e => {this.reset()}} className=\"lamlai-btn\"> Lam lai! </button> </div> \r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<div className=\"left\">  \r\n{!!question_1.image && (\r\n\t\t\t\t\t\t\t\t<img onClick={e => {this.handleLeftImageClick(`question_${this.currentQuestionIndex}1`)\r\n\t\t\t\t\t\t\t\taudio.play()} }  \r\n\t\t\t\t\t\t\t\tclassName={`question_${this.currentQuestionIndex}1`} src={question_1.image} alt=\"\"/>                \r\n)}\r\n\r\n{!!question_2.image && (\r\n\t\t\t\t\t\t\t\t<img onClick={e => {this.handleLeftImageClick(`question_${this.currentQuestionIndex}2`)\r\n\t\t\t\t\t\t\taudio.play()} }  \r\n\t\t\t\t\t\t\t\tclassName={`question_${this.currentQuestionIndex}2`} src={question_2.image} alt=\"\"/>                \r\n)}\r\n\r\n\r\n{!!question_3.image && (\r\n\t\t\t\t\t\t\t\t<img onClick={e => {this.handleLeftImageClick(`question_${this.currentQuestionIndex}3`)\r\n\t\t\t\t\t\t\taudio.play()} }  \r\n\t\t\t\t\t\t\t\tclassName={`question_${this.currentQuestionIndex}3`} src={question_3.image} alt=\"\"/>                \r\n)}\r\n\r\n\r\n\t\t\t\t\t\t</div>  \r\n\t\t\t\t\t\t<div className=\"right\"> \r\n{!!answer_1.image && (\r\n\t\t\t\t\t\t\t\t<img onClick={e => {this.handleRightImageClick(`answer_${this.currentQuestionIndex}1`)\r\n\t\t\t\t\t\t\taudio.play()} }   \r\n\t\t\t\t\t\t\t\tclassName={`answer_${this.currentQuestionIndex}1`} src={answer_1.image} alt=\"\"/>              \r\n)}\r\n\r\n\r\n{!!answer_2.image && (\r\n\t\t\t\t\t\t\t\t<img onClick={e => {this.handleRightImageClick(`answer_${this.currentQuestionIndex}2`)\r\n\t\t\t\t\t\t\taudio.play()} }   \r\n\t\t\t\t\t\t\t\tclassName={`answer_${this.currentQuestionIndex}2`} src={answer_2.image} alt=\"\"/>            \r\n)}\r\n\r\n\r\n{!!answer_3.image && (\r\n\t\t\t\t\t\t\t\t<img onClick={e => {this.handleRightImageClick(`answer_${this.currentQuestionIndex}3`)\r\n\t\t\t\t\t\t\taudio.play()} }   \r\n\t\t\t\t\t\t\t\tclassName={`answer_${this.currentQuestionIndex}3`} src={answer_3.image} alt=\"\"/>        \r\n)}\r\n\r\n\t\t\t\t\t\t</div>  \r\n\r\n\t\t\t\t\t</div>  \r\n\t\r\n\t\t\t\t\t<div className=\"dot-wr\">\r\n\t\t\t\t\t\t{this.data.length && this.data\r\n\t\t\t\t\t\t\t? this.data.map((item, i) => (\r\n\t\t\t\t\t\t\t\t\t<span key={item.id} className={classNames('dot-navigation', {'is-active': this.currentQuestionIndex === i})} onClick={e => {\r\n\t\t\t\t\t\t\t\t\t\tthis.currentQuestionIndex = i\r\n\t\t\t\t\t\t\t\t\t\tsetTimeout(()=> {\r\n\t\t\t\t\t\t\t\t\t\t\tthis.reDrawLines()\r\n\t\t\t\t\t\t\t\t\t\t}, 100)\r\n\r\n\t\t\t\t\t\t\t\t\t}}> </span>\r\n\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t{this.isClickXemKetQua && (\r\n\t\t\t\t\t\t<div> \r\n\t\t\t\t\t\t\t{ \r\n\t\t\t\t\t\t\t\tthis.resultList[this.currentQuestionIndex] === null ?   \r\n\t\t\t\t\t\t\t\t( null ): \r\n\t\t\t\t\t\t\t\t( <div> \r\n\t\t\t\t\t\t\t\t\t<p> {this.ketquaCuthe()} </p>\r\n\t\t\t\t\t\t\t\t\t{ \r\n\t\t\t\t\t\t\t\t\t\tthis.resultList[this.currentQuestionIndex] === true ?   \r\n\t\t\t\t\t\t\t\t\t\t( <div className=\"text-success\"> <i className=\"fa fa-check\"></i> Đúng </div> ): \r\n\t\t\t\t\t\t\t\t\t\t( <div className=\"text-danger\"> <i className=\"fa fa-times\"></i> Sai </div> )  \r\n\t\t\t\t\t\t\t\t\t} \r\n\t\r\n\t\t\t\t\t\t\t\t</div> )  \r\n\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t</div>    \r\n\t\t\t\t\t\r\n\t\t\t\t\t)}\r\n\t\t\t\t<style jsx global> {`   \r\n\t.left{  \r\n\t\tfloat: left;  \r\n\t\twidth: 400px; \r\n\t\ttext-align: right;  \r\n\t} \r\n\t\r\n\t.right{ \r\n\t\tfloat: right; \r\n\t\twidth: 400px; \r\n\t\ttext-align: left; \r\n\t} \r\n\t\r\n\t.left-right-wr{ \r\n\t\tfloat: left;  \r\n\t\twidth: 100%;  \r\n\t\t\t\r\n\t} \r\n\t.left-right-wr img {  \r\n\t\tmax-width: 100%;  \r\n\t\theight: auto; \r\n\t\tdisplay: block; \r\n\t} \r\n\t\r\n\t.left img{  \r\n\t\tmargin-left: auto;  \r\n\t} \r\n\r\n\r\n\tspan.dot-navigation{\r\n\twidth: 20px;\r\n\theight: 20px;\r\n\tborder: 1px solid #ddd;\r\n\tdisplay: inline-block;\r\n\tborder-radius: 50%;\r\n\tmargin-right: 15px;\r\n\tcursor: pointer;\r\n\tbackground-color: white;\r\n}\r\n\r\n.is-active{\r\n\tbackground-color: green!important;\r\n}\r\n\r\n.xemkq{\r\n\tposition: absolute;\r\n\tbottom: 10px;\r\n\tright: 0;\r\n\twidth: 150px;\r\n\theight: 40px;\r\n\tborder: 2px solid green;\r\n\tborder-radius: 5px;\r\n\tcursor: pointer;\r\n\ttransition: all 0.2s ease;\r\n\tfont-size: 16px;\r\n\tcolor: green;\r\n\tfont-weight: bold;\r\n\ttext-transform: uppercase;\r\n}\r\n\r\n.xemkq:hover{\r\n\tbackground: green;\r\n\tcolor: white;\r\n}\r\n\r\n.left img, .right img {\r\n\tmargin-bottom: 15px;\r\n\tcursor: pointer;\r\n\tposition: relative;\r\n\tdisplay: block!important;\r\n\ttransition: all 0.1s ease;\r\n}\r\n\r\n.left img:after, .right img:after{\r\n\tcontent: \"\";\r\n\twidth: 100px;\r\n\theight: 100%;\r\n\tborder: 1px solid red;\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\tz-index: 100!important;\r\n\tbackground-color: red;\r\n}\r\n\r\n\r\n\r\n.left img:hover, .right img:hover {\r\n\t transform: scale(1.01, 1.01);\r\n}\r\n\r\n.left img, .right img{\r\n  height: 150px;\r\n  border: 1px solid #efefef;\r\n  margin-bottom: 20px;\r\n  width: auto;\r\n}\r\n.left-right-wr{\r\n  // background: #ddd;\r\n  padding: 15px;\r\n  margin-bottom: 40px;\r\n  height: 600px;\r\n}\r\n\r\n.xemkq {\r\n  position: absolute;\r\n  bottom: -70px;\r\n  right: 0px;\r\n}\r\n\r\n.left-right-wr{\r\n  position: relative;\r\n}\r\n\r\n.lamlai-btn{\r\n  width: 100px;\r\n  font-weight: bold;\r\n  text-transform: uppercase;\r\n  padding: 5px 10px;\r\n  border-radius: 5px;\r\n  border: 1px solid green;\r\n  color: green;\r\n  cursor: pointer;\r\n  transition: all 0.1s ease;\r\n}\r\n\r\n.lamlai-btn:hover{\r\n  background: green;\r\n  color: white;\r\n}\r\n\r\n\t\t\t\t\t`}  \r\n\t\t\t\t\t</style>  \r\n\t\t\t\t</div>  \r\n\t\t\t) \r\n\t\t} \r\n\t} \r\n\t\r\n)\r\n\r\nexport default TuanAnhLine\r\n\r\n\r\ndecorate(TuanAnhLine, {\r\n\tdata: observable,\r\n\tlineData: observable,\r\n\tcurrentQuestionIndex: observable,\r\n\tresultList: observable,\r\n\tshowAnswer: observable,\r\n\tisClickXemKetQua: observable\r\n\r\n})","import React, {Component} from 'react'\r\n\r\nimport LineTo, { SteppedLineTo, Line } from 'react-lineto';\r\nimport TuanAnhLine from './TuanAnhLine.js'\r\n\r\nfunction Demo() {\r\n  return (\r\n    <div>\r\n    <TuanAnhLine></TuanAnhLine>\r\n{/*   <PolygonTest />\r\n      <SteppedTest />\r\n      <HoverTest />\r\n      <DelayTest />\r\n      <TreeTest />*/}\r\n<style jsx global> {`  \r\n  body {\r\n  font-family: sans-serif;\r\n}\r\nfieldset {\r\n  position: relative;\r\n  border-width: 1px;\r\n  border-style: solid;\r\n  margin-bottom: 10px;\r\n}\r\nlegend {\r\n  font-variant: small-caps;\r\n}\r\n#polygon-test {\r\n  height: 160px;\r\n}\r\n#stepped-test {\r\n  height: 200px;\r\n}\r\n#hover-test {\r\n  height: 260px;\r\n}\r\n#delay-test {\r\n  height: 150px;\r\n}\r\n#tree-test .block {\r\n  position: relative;\r\n}\r\n.tree-test-wrap {\r\n  display: flex;\r\n  flex-Direction: row;\r\n  align-items: flex-start;\r\n  position: relative;\r\n}\r\n.tree-item {\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n}\r\n.tree-block-wrap {\r\n  padding: 0 100px 10px 0;\r\n}\r\n.tree-column {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n}\r\n.block {\r\n  position: absolute;\r\n  width: 50px;\r\n  height: 50px;\r\n  line-height: 50px;\r\n  background-color: #000;\r\n  cursor: pointer;\r\n  text-align: center;\r\n  color: #fff;\r\n}\r\n`}\r\n</style>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass Block extends Component {\r\n  render() {\r\n    const { top, left, color, className } = this.props;\r\n    const style = { top, left, backgroundColor: color };\r\n    return (\r\n      <div\r\n        className={`block ${className}`}\r\n        style={style}\r\n        onMouseOver={this.props.onMouseOver}\r\n        onMouseOut={this.props.onMouseOut}\r\n      >\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nclass PolygonTest extends Component {\r\n  makeShape(x, y, n, initialAngle) {\r\n    const elems = [];\r\n    const lineLength = 100;\r\n    const angle = Math.PI - Math.PI / n;\r\n\r\n    let x0 = x;\r\n    let y0 = y;\r\n\r\n    for (let i = 0, theta = initialAngle; i < n; i += 1, theta += angle) {\r\n      const x1 = x0 + lineLength * Math.cos(theta);\r\n      const y1 = y0 + lineLength * Math.sin(theta);\r\n      elems.push(<Line key={i} x0={x0} y0={y0} x1={x1} y1={y1} />);\r\n      x0 = x1;\r\n      y0 = y1;\r\n    }\r\n\r\n    return elems;\r\n  }\r\n\r\n  render() {\r\n    const triangle = this.makeShape(80, 75, 3, Math.PI / 3);\r\n    const star = this.makeShape(150, 105, 5, 0);\r\n    const ngon = this.makeShape(280, 85, 7, Math.PI / 7);\r\n\r\n    return (\r\n      <fieldset id=\"polygon-test\">\r\n        <legend>Polygon Test</legend>\r\n\r\n        Demonstrate how to draw absolutely positioned line segments.\r\n\r\n        {triangle}\r\n        {star}\r\n        {ngon}\r\n      </fieldset>\r\n    );\r\n  }\r\n}\r\n\r\nclass SteppedTest extends Component {\r\n  render() {\r\n    const style = {\r\n      delay: true,\r\n      borderColor: '#ddd',\r\n      borderStyle: 'solid',\r\n      borderWidth: 3,\r\n    };\r\n    return (\r\n      <fieldset id=\"stepped-test\">\r\n        <legend>Stepped Test</legend>\r\n\r\n        Demonstrate how to draw stepped lines.\r\n\r\n        <Block\r\n          className=\"stepped-A\"\r\n          top=\"50px\"\r\n          left=\"90px\"\r\n          color=\"#00f\"\r\n          >A</Block>\r\n        <Block\r\n          className=\"stepped-B\"\r\n          top=\"150px\"\r\n          left=\"20px\"\r\n          color=\"#00f\"\r\n          >B</Block>\r\n        <Block\r\n          className=\"stepped-C\"\r\n          top=\"150px\"\r\n          left=\"90px\"\r\n          color=\"#00f\"\r\n          >C</Block>\r\n        <Block\r\n          className=\"stepped-D\"\r\n          top=\"150px\"\r\n          left=\"160px\"\r\n          color=\"#00f\"\r\n          >D</Block>\r\n        <Block\r\n          className=\"stepped-E\"\r\n          top=\"50px\"\r\n          left=\"300px\"\r\n          color=\"#00f\"\r\n          >E</Block>\r\n        <Block\r\n          className=\"stepped-F\"\r\n          top=\"120px\"\r\n          left=\"300px\"\r\n          color=\"#00f\"\r\n          >F</Block>\r\n        <SteppedLineTo from=\"stepped-A\" to=\"stepped-B\"\r\n          fromAnchor=\"bottom\" toAnchor=\"top\" {...style} />\r\n        <SteppedLineTo from=\"stepped-A\" to=\"stepped-C\"\r\n          fromAnchor=\"bottom\" toAnchor=\"top\" {...style} />\r\n        <SteppedLineTo from=\"stepped-A\" to=\"stepped-D\"\r\n          fromAnchor=\"bottom\" toAnchor=\"top\" {...style} />\r\n        <SteppedLineTo from=\"stepped-A\" to=\"stepped-E\"\r\n          fromAnchor=\"right\" toAnchor=\"left\" orientation=\"h\" {...style} />\r\n        <SteppedLineTo from=\"stepped-A\" to=\"stepped-F\"\r\n          fromAnchor=\"right\" toAnchor=\"left\" orientation=\"h\" {...style} />\r\n      </fieldset>\r\n    );\r\n  }\r\n}\r\n\r\nclass HoverTest extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.initialState = {\r\n      from: null,\r\n      to: null,\r\n    };\r\n    this.state = this.initialState;\r\n    this.clearLine = this.clearLine.bind(this);\r\n    this.drawLine = this.drawLine.bind(this);\r\n  }\r\n  clearLine() {\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  drawLine(from, to) {\r\n    this.setState({ from, to });\r\n  }\r\n\r\n  render() {\r\n    const { from, to } = this.state;\r\n    const line = from && to ? (\r\n      <LineTo\r\n        from={from}\r\n        to={to}\r\n        fromAnchor=\"middle right\"\r\n        toAnchor=\"middle left\"\r\n        borderWidth={3}\r\n      />\r\n    ) : null;\r\n    return (\r\n      <fieldset id=\"hover-test\">\r\n        <legend>Hover Test</legend>\r\n\r\n        Demonstrate how to draw a line from one component to another\r\n        in response to a hover event.\r\n\r\n        <Block\r\n          className=\"hover-A\"\r\n          onMouseOver={() => this.drawLine('hover-A', 'hover-F')}\r\n          onMouseOut={this.clearLine}\r\n          top=\"80px\"\r\n          left=\"20px\"\r\n          color=\"#00f\"\r\n\r\n          >A</Block>\r\n        <Block\r\n          className=\"hover-B\"\r\n          top=\"140px\"\r\n          left=\"20px\"\r\n          color=\"#0f0\"\r\n          onMouseOver={() => this.drawLine('hover-B', 'hover-E')}\r\n          onMouseOut={this.clearLine}\r\n          >B</Block>\r\n        <Block\r\n          className=\"hover-C\"\r\n          top=\"200px\"\r\n          left=\"20px\"\r\n          color=\"#00f\"\r\n          onMouseOver={() => this.drawLine('hover-C', 'hover-D')}\r\n          onMouseOut={this.clearLine}\r\n          >C</Block>\r\n        <Block\r\n          className=\"hover-D\"\r\n          top=\"80px\"\r\n          left=\"300px\"\r\n          color=\"#0f0\"\r\n          onMouseOver={() => this.drawLine('hover-D', 'hover-C')}\r\n          onMouseOut={this.clearLine}\r\n          >D</Block>\r\n        <Block\r\n          className=\"hover-E\"\r\n          top=\"140px\"\r\n          left=\"300px\"\r\n          color=\"#00f\"\r\n          onMouseOver={() => this.drawLine('hover-E', 'hover-B')}\r\n          onMouseOut={this.clearLine}\r\n          >E</Block>\r\n        <Block\r\n          className=\"hover-F\"\r\n          top=\"200px\"\r\n          left=\"300px\"\r\n          color=\"#0f0\"\r\n          onMouseOver={() => this.drawLine('hover-F', 'hover-A')}\r\n          onMouseOut={this.clearLine}\r\n          >F</Block>\r\n        {line}\r\n      </fieldset>\r\n    );\r\n  }\r\n}\r\n\r\nclass DelayTest extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      targetVisible: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const target = this.state.targetVisible ? (\r\n      <Block\r\n        className=\"delay-F\"\r\n        top=\"80px\"\r\n        left=\"300px\"\r\n        color=\"#f00\"\r\n        >F</Block>\r\n    ) : null;\r\n    return (\r\n      <fieldset id=\"delay-test\">\r\n        <legend>Delay Test</legend>\r\n\r\n        Demonstrate how to draw a line to a component which does not\r\n        exist at the moment that the LineTo component has been mounted.\r\n\r\n        <Block\r\n          className=\"delay-E\"\r\n          top=\"80px\"\r\n          left=\"20px\"\r\n          color=\"#00f\"\r\n          onMouseOver={() => this.setState({ targetVisible: true })}\r\n          onMouseOut={() => this.setState({ targetVisible: false })}\r\n          >E</Block>\r\n        {target}\r\n        <LineTo\r\n          from=\"delay-E\"\r\n          to=\"delay-F\"\r\n          fromAnchor=\"75% 75%\"\r\n          toAnchor=\"25% 25%\"\r\n          borderColor=\"#0f0\"\r\n          borderStyle=\"dotted\"\r\n          borderWidth={2}\r\n          delay={1} />\r\n      </fieldset>\r\n     );\r\n  }\r\n}\r\n\r\nclass TreeTest extends Component {\r\n  render() {\r\n    return (\r\n    <fieldset id=\"tree-test\">\r\n      <legend>Tree Test</legend>\r\n      <div className=\"tree-test-wrap\">\r\n        <TreeItem name=\"\" depth={0} index={0} />\r\n      </div>\r\n    </fieldset>\r\n    );\r\n  }\r\n  }\r\n\r\n  class TreeItem extends Component {\r\n  render() {\r\n    const style = {\r\n      delay: true,\r\n      borderColor: '#ddd',\r\n      borderStyle: 'solid',\r\n      borderWidth: 3\r\n    };\r\n    const h = ({ _: 20, A: 120, B: 100, C: 200, D: 50 })[this.props.name[0] || '_'];\r\n    const l = Math.ceil(((this.props.index + 2) / 20) * 100) + 10 * (this.props.depth + 1);\r\n    return (\r\n      <div className=\"tree-item\">\r\n        <div className=\"tree-block-wrap\">\r\n          <Block className={`tree-${this.props.name}`} color={`hsl(${h}, 100%, ${l}%)`}>\r\n            {this.props.name || 'X'}\r\n          </Block>\r\n        </div>\r\n        {this.props.depth < 2 ? (\r\n          <div className=\"tree-column\">\r\n            {Array(Math.ceil(Math.random() * 3) + 1).fill(null).\r\n              map((_, i) => (\r\n                <TreeItem\r\n                  parent={this}\r\n                  index={this.props.index * this.props.depth + i}\r\n                  name={`${this.props.name}${String.fromCharCode(65 + i)}`}\r\n                  depth={this.props.depth + 1}\r\n                />\r\n              ))\r\n            }\r\n          </div>\r\n        ) : null}\r\n        {this.props.parent ? (\r\n          <SteppedLineTo\r\n            within=\"tree-test-wrap\"\r\n            from={`tree-${this.props.parent.props.name}`}\r\n            to={`tree-${this.props.name}`}\r\n            fromAnchor=\"right\"\r\n            toAnchor=\"left\"\r\n            orientation=\"h\"\r\n            {...style} />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n  }\r\nclass MatchingTest extends Component{\r\n  render(){\r\n    const style = {\r\n      delay: true,\r\n      borderColor: '#000',\r\n      borderStyle: 'solid',\r\n      borderWidth: 1\r\n    };\r\n    return (\r\n      <div className=\"MatchingTest-wrapper\">\r\n        <Demo></Demo>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MatchingTest","// import React, {Component} from 'react'\r\n\r\n// import {\r\n//  Active,\r\n//  Compose,\r\n//  Counter,\r\n//  Field,\r\n//  Focus,\r\n//  FocusManager,\r\n//  Form,\r\n//  Hover,\r\n//  Interval,\r\n//  List,\r\n//  Map,\r\n//  Set,\r\n//  State,\r\n//  Toggle,\r\n//  Touch,\r\n//  Value,\r\n// } from 'react-powerplug'\r\n\r\n// class PowerPlugDemo extends Component{\r\n//  render(){\r\n//    return (\r\n//      <div className=\"PowerPlugDemo-wrapper\">\r\n//        <Template title=\"State\">\r\n//          <State initial={{ favorite: \"\", picked: \"\" }}>\r\n//            {({ state, setState }) => (\r\n//              <div>\r\n//                <button\r\n//                  onClick={() =>\r\n//                    setState({\r\n//                      favorite: \"Alligator\",\r\n//                      picked: new Date().toLocaleTimeString()\r\n//                    })\r\n//                  }\r\n//                >\r\n//                  Alligator\r\n//                </button>\r\n//                <button\r\n//                  onClick={() =>\r\n//                    setState({\r\n//                      favorite: \"Crocodile\",\r\n//                      picked: new Date().toLocaleTimeString()\r\n//                    })\r\n//                  }\r\n//                >\r\n//                  Crocodilee\r\n//                </button>\r\n//                <button onClick={() => setState({ favorite: \"\", picked: \"\" })}>\r\n//                  Reset\r\n//                </button>\r\n//                {state.favorite && state.picked && (\r\n//                  <div>\r\n//                    <br />You picked {state.favorite} at {state.picked}\r\n//                  </div>\r\n//                )}\r\n//              </div>\r\n//            )}\r\n//          </State>\r\n\r\n//        </Template>\r\n\r\n//        <Template title=\"Active\">\r\n//          <Active>\r\n//            {({ active, bind }) => (\r\n//              <div {...bind}>\r\n//                {!active && <span>Click here to activate!</span>}\r\n//                {active && <span>STOP CLICKING ME!!</span>}\r\n//              </div>\r\n//            )}\r\n//          </Active>\r\n\r\n//        </Template>\r\n\r\n\r\n//        <Template title=\"Form\">\r\n//          <Form initial={{ firstName: '', lastName: '' }}>\r\n//            {({ field, values }) => (\r\n//              <form\r\n//                onSubmit={e => {\r\n//                  e.preventDefault()\r\n//                  console.log('Form Submission Data:', values)\r\n//                }}\r\n//              >\r\n//                <input\r\n//                  type=\"text\"\r\n//                  placeholder=\"Your First Name\"\r\n//                  {...field('firstName').bind}\r\n//                />\r\n//                <input\r\n//                  type=\"text\"\r\n//                  placeholder=\"Your Last Name\"\r\n//                  {...field('lastName').bind}\r\n//                />\r\n//                <input type=\"submit\" value=\"All Done!\" />\r\n//              </form>\r\n//            )}\r\n//          </Form>         \r\n\r\n//        </Template>\r\n\r\n//      </div>\r\n//    )\r\n//  }\r\n// }\r\n\r\n\r\n// const Template = ({title, children}) => (\r\n//  <div className=\"wrpaaer\">\r\n//    <h2> {title} </h2>\r\n//    {children}\r\n\r\n//    <style jsx> {`  \r\n//      .wrpaaer{\r\n//        border: 1px solid #ddd;\r\n//        margin-bottom: 50px;\r\n//        padding: 20px;\r\n//      }\r\n//    `}\r\n//    </style>\r\n//  </div>\r\n// )\r\n\r\n// export default PowerPlugDemo\r\n// \r\nimport React, {Component} from 'react'\r\n\r\nclass PowerPlugDemo extends Component{\r\n  render(){\r\n    return (\r\n      <div className=\"PowerPlugDemo-wrapper\">\r\n        PowerPlugDemo\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PowerPlugDemo","import React, { Component } from \"react\"\r\n\r\nimport \"./App.css\"\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\"\r\nimport Notfound from \"./components/Notfound\"\r\nimport ForecastOneCity from \"./components/ForecastOneCity\"\r\nimport Home from \"./components/Home\"\r\nimport Header from './components/Header';\r\nimport Question from './components/Question';\r\nimport TestTriNho from './components/TestTriNho';\r\nimport MatchingTest from './components/MatchingTest';\r\nimport PowerPlugDemo from './components/PowerPlugDemo';\r\nimport \"bootstrap/dist/css/bootstrap.css\"\r\n\r\n\r\n\r\nclass App extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Router>\r\n\t\t\t\t<div className=\"App container\">\r\n\t\t\t\t\t<Header></Header>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path=\"/forecast/:cityname\" component={ForecastOneCity} />\r\n\t\t\t\t\t\t<Route path=\"/question/:id\" component={Question} />\r\n\t\t\t\t\t\t<Route path=\"/testtrinho\" component={TestTriNho} />\r\n\t\t\t\t\t\t<Route path=\"/matchingtest\" component={MatchingTest} />\r\n\t\t\t\t\t\t<Route path=\"/powerplug\" component={PowerPlugDemo} />\r\n\t\t\t\t\t\t<Route path=\"/\" exact component={Home} />\r\n\t\t\t\t\t\t<Route exact path=\"*\" component={Notfound} />\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</div>\r\n\t\t\t</Router>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./index.css\"\r\nimport App from \"./App\"\r\n\r\nimport * as serviceWorker from \"./serviceWorker\"\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}